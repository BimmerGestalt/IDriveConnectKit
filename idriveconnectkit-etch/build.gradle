import de.undercouch.gradle.tasks.download.Download
import de.undercouch.gradle.tasks.download.Verify

plugins {
    id 'de.undercouch.download' version "5.6.0"
}
apply plugin: 'java-library'
apply plugin: 'maven-publish'


dependencies {
    api project(path: ':etch-runtime')
}

sourceSets {
    main.java.srcDirs += 'build/generated'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

def isRunningOnJitpack = System.getenv("JITPACK") == "true"
tasks.register('downloadEtchCompiler', Download) {
    if (isRunningOnJitpack)
    // can't connect to archive.apache.org
    // https://github.com/jitpack/jitpack.io/issues/4995
        src 'https://bimmergestalt.s3.amazonaws.com/aaidrive/external/apache-etch-1.4.0-windows-x86-bin.zip'
    else
        src 'https://archive.apache.org/dist/etch/1.4.0/apache-etch-1.4.0-windows-x86-bin.zip'
    dest file("${buildDir}/etch/apache-etch-1.4.0-windows-x86-bin.zip")
    overwrite false
    outputs.file "${buildDir}/etch/apache-etch-1.4.0-windows-x86-bin.zip"
}
tasks.register('verifyEtchCompiler', Verify) {
    dependsOn downloadEtchCompiler
    src file("${buildDir}/etch/apache-etch-1.4.0-windows-x86-bin.zip")
    algorithm "SHA-512"
    checksum "915128A2E6E6FA83F4A576EBAC4DA5A250EC6F3BEB11C76404664B5067CFD94703531219" +
            "6CAB6BB6EF96EEB765E39A87E11E774A59257E7932F2D3761CAE0354"
}
tasks.register('extractEtchCompiler', Copy) {
    dependsOn verifyEtchCompiler
    from zipTree(file("${buildDir}/etch/apache-etch-1.4.0-windows-x86-bin.zip"))
    into "${buildDir}/etch"
    outputs.dir "${buildDir}/etch/apache-etch-1.4.0"
}
tasks.register('compileEtch', JavaExec) {
    dependsOn extractEtchCompiler
    main "org.apache.etch.compiler.EtchMain"
    classpath files(
            "${buildDir}/etch/apache-etch-1.4.0/lib/apache-etch-compiler-1.4.0.jar",
            "${buildDir}/etch/apache-etch-1.4.0/lib/apache-etch-java-compiler-1.4.0.jar",
            "${buildDir}/etch/apache-etch-1.4.0/lib/velocity-1.7-dep.jar"
    )
    workingDir "${rootDir}/idriveconnectkit-etch"
    args('--binding', 'java', '--output-dir', "${buildDir}/generated", 'BMWRemoting.etch')
    inputs.file("${rootDir}/idriveconnectkit-etch/BMWRemoting.etch")
    outputs.dir "${buildDir}/generated"
}

compileJava.dependsOn compileEtch
compileJava.mustRunAfter compileEtch

group = 'io.bimmergestalt'
version = '0.7'

publishing {
    publications {
        maven(MavenPublication) {
            // package names for Maven/Jitpack
            groupId 'io.bimmergestalt'
            artifactId 'idriveconnectkit-etch'
            version '0.7'

            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/BimmerGestalt/IDriveConnectKit"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}